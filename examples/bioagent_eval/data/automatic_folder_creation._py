"""
This script will create a folder for each task.
The structure will be:
- task_folder
    - README.md
    - run_analysis.sh
    - python_script1.py
    - bash_script1.sh
    ...
    - variant_1
        files
    - variant_2
        ...
"""

from textwrap import dedent
import json
import os
import shutil
import re


with open("examples/bioagent_eval/task_variants_expanded.json", "r") as file:
    data = json.load(file)

WORKING_DIR = "examples/bioagent_eval/data"

# 0. Check wich tasks have variants for which we have all files in pdb_files or uniprot_files
# We will only parse variants made out of strings or list of stringss

all_tasks = list(data.keys())


filtered_tasks = []

for task in all_tasks:
    elem = data[task]["variants"]["variant_1"]
    if isinstance(elem, list):
        filtered_tasks.append(task)
    elif isinstance(elem, str):
        filtered_tasks.append(task)
    elif isinstance(elem, dict):
        continue
    else:
        continue


# 1. Create a folder for each task

for task in filtered_tasks:
    task_folder = f"{WORKING_DIR}/{task}"
    os.makedirs(task_folder, exist_ok=True)

    steps = data[task]["steps"]
    if isinstance(steps, list):
        steps = " ".join(steps)

    # Split steps using regex: number followed by ')' and a space
    split_steps = re.split(r"\d+\)\s", steps)
    # The first element may be empty if the string starts with "1) "
    split_steps = [s for s in split_steps if s.strip()]
    steps_formatted = "\n".join(
        [f"{i + 1}) {step.strip()}" for i, step in enumerate(split_steps)]
    )

    string_to_write = (
        dedent(f"""
    **Task**
    {data[task]["description"]}

    **Steps**
    {steps_formatted}

    **Variant**
    We don't need to download the data, the data is already in variant_1 folder

    {data[task]["variants"]["variant_1"]}
    """).strip()
        + "\n"
    )

    with open(f"{task_folder}/README.md", "w") as file:
        file.write(string_to_write)

# 2. Create a folder for each variant
for task in filtered_tasks:
    task_folder = f"{WORKING_DIR}/{task}"
    print("--------------------------------")
    print(f"Processing task: {task}")
    for i in range(1, 6):
        variant_folder = f"{task_folder}/variant_{i}"
        os.makedirs(variant_folder, exist_ok=True)
        # Add the files to each variant
        data_source = data[task]["data_source"]
        variant_files = data[task]["variants"][f"variant_{i}"]
        print(variant_files)
        if "PDB" in data_source and "UniProt" not in data_source:
            if isinstance(variant_files, str):
                variant_files = [variant_files]
            for file in variant_files:
                if isinstance(file, str):
                    if not os.path.exists(
                        f"examples/bioagent_eval/data/pdb_files/{file}.pdb"
                    ):
                        print(f"File {file}.pdb not found")
                        continue
                    shutil.copy(
                        f"examples/bioagent_eval/data/pdb_files/{file}.pdb",
                        f"{variant_folder}/{file}.pdb",
                    )
                elif isinstance(file, list):
                    for f in file:
                        if not os.path.exists(
                            f"examples/bioagent_eval/data/pdb_files/{f}.pdb"
                        ):
                            print(f"File {f}.pdb not found")
                            continue
                        shutil.copy(
                            f"/examples/bioagent_eval/data/pdb_files/{f}.pdb",
                            f"{variant_folder}/{f}.pdb",
                        )
        elif "UniProt" in data_source and "PDB" not in data_source:
            if isinstance(variant_files, str):
                variant_files = [variant_files]
            for file in variant_files:
                if isinstance(file, str):
                    # Check if the file exists
                    if not os.path.exists(
                        f"examples/bioagent_eval/data/uniprot_files/{file}.fasta"
                    ):
                        print(f"File {file}.fasta not found")
                        continue
                    shutil.copy(
                        f"examples/bioagent_eval/data/uniprot_files/{file}.fasta",
                        f"{variant_folder}/{file}.fasta",
                    )
                elif isinstance(file, list):
                    for f in file:
                        if not os.path.exists(
                            f"examples/bioagent_eval/data/uniprot_files/{file}.fasta"
                        ):
                            print(f"File {file}.fasta not found")
                            continue
                        shutil.copy(
                            f"examples/bioagent_eval/data/uniprot_files/{f}.fasta",
                            f"{variant_folder}/{f}.fasta",
                        )
        else:
            # Delete the whole folder
            shutil.rmtree(variant_folder)
            continue
